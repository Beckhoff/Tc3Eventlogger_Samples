///////////////////////////////////////////////////////////////////////////////
// PublisherModule.h
#pragma once

#include "PublisherListenerInterfaces.h"

class CPublisherModule 
	: public ITComObject
	, public ITcADI
	, public ITcWatchSource
///<AutoGeneratedContent id="InheritanceList">
	, public ITcCyclic
///</AutoGeneratedContent>
{
public:
	DECLARE_IUNKNOWN()
	DECLARE_IPERSIST_LIB()
	DECLARE_ITCOMOBJECT_LOCKOP()
	DECLARE_ITCADI()
	DECLARE_ITCWATCHSOURCE()
	DECLARE_OBJPARAWATCH_MAP()
	DECLARE_OBJDATAAREA_MAP()

	CPublisherModule();
	virtual	~CPublisherModule();


///<AutoGeneratedContent id="InterfaceMembers">
	// ITcCyclic
	virtual HRESULT TCOMAPI CycleUpdate(ITcTask* ipTask, ITcUnknown* ipCaller, ULONG_PTR context);

///</AutoGeneratedContent>

protected:
	DECLARE_ITCOMOBJECT_SETSTATE();

	HRESULT AddModuleToCaller();
	VOID RemoveModuleFromCaller();

	// Tracing
	CTcTrace m_Trace;

///<AutoGeneratedContent id="Members">
	TcTraceLevel m_TraceLevelMax;
	PublisherModuleParameter m_Parameter;
	PublisherModuleInputs m_Inputs;
	PublisherModuleOutputs m_Outputs;
	ITcCyclicCallerInfoPtr m_spCyclicCaller;
///</AutoGeneratedContent>

	// TODO: Custom variable
	UINT m_counter;
	ITcEventLoggerPtr m_spEventLogger;
	ITcMessagePtr m_spMessage;
	ITcAlarmPtr m_spAlarm;
	PCHAR m_pjsonAttribute;


	////////////////////////////////////////////////////////////////////////////////
#if _MSC_VER >= 1900
	template <typename... T>
	void SendMessage(TcEventEntry eventEntry, const T&... args)
	{
		SendTcMessage(m_spEventLogger, eventEntry.uuidEventClass, eventEntry.nEventId, eventEntry.eSeverity, &TcSourceInfo("EventLogger CPP Sample"), args...);
		//m_spEventLogger->SendTcMessage(eventEntry.uuidEventClass, eventEntry.nEventId, eventEntry.eSeverity, &TcSourceInfo("EventLogger CPP Sample"), 0, &TcArgs(args...));
	}
#endif
};
