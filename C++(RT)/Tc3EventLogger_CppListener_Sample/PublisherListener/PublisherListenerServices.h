///////////////////////////////////////////////////////////////////////////////
// PublisherListenerServices.h

#pragma once

#include "TcServices.h"

const ULONG DrvID_PublisherListener = 0x3F000000;
#define SRVNAME_PUBLISHERLISTENER "PublisherListener"

///<AutoGeneratedContent id="ClassIDs">
const CTCID CID_PublisherListenerCPublisherModule = {0xe520d46e,0x1bd7,0x4996,{0xac,0xef,0xaa,0xc0,0x05,0x0f,0x03,0x62}};
const CTCID CID_PublisherListenerCListenerModule = {0x1c8e8bc1,0xbb66,0x4f3c,{0x9a,0x1a,0xc8,0x0d,0xac,0x8d,0xc1,0xaa}};
///</AutoGeneratedContent>

///<AutoGeneratedContent id="ParameterIDs">
const PTCID PID_PublisherModuleParameter = 0x00000001;
const PTCID PID_ListenerModuleParameter = 0x00000001;
///</AutoGeneratedContent>

///<AutoGeneratedContent id="DataTypes">
typedef struct _PublisherModuleParameter
{
	ULONG data1;
	ULONG data2;
	double data3;
} PublisherModuleParameter, *PPublisherModuleParameter;

typedef struct _PublisherModuleInputs
{
	bool bSendMessage;
	bool bRaiseAlarm;
	bool bClearAlarm;
	bool bConfirmAlarm;
	bool bAddJsonToMessage;
	bool bClearJsonFromMessage;
} PublisherModuleInputs, *PPublisherModuleInputs;

#pragma pack(push,1)
typedef struct _PublisherModuleOutputs
{
} PublisherModuleOutputs, *PPublisherModuleOutputs;
#pragma pack(pop)

typedef struct _ListenerModuleParameter
{
	ULONG data1;
	ULONG data2;
	double data3;
} ListenerModuleParameter, *PListenerModuleParameter;

#pragma pack(push,1)
typedef struct _ListenerModuleInputs
{
} ListenerModuleInputs, *PListenerModuleInputs;
#pragma pack(pop)

typedef struct _ListenerModuleOutputs
{
	ULONG nReceivedMessages;
	ULONG nReceivedAlarmRaise;
	ULONG nReceivedAlarmConfirm;
	ULONG nReceivedAlarmClear;
	ULONG nReceivedAlarmDispose;
} ListenerModuleOutputs, *PListenerModuleOutputs;

///</AutoGeneratedContent>



///<AutoGeneratedContent id="DataAreaIDs">
#define ADI_PublisherModuleInputs 0
#define ADI_PublisherModuleOutputs 1
#define ADI_ListenerModuleInputs 0
#define ADI_ListenerModuleOutputs 1
///</AutoGeneratedContent>

///<AutoGeneratedContent id="EventClasses">
#if !defined(_TC_TYPE_F5D63276_0ED5_42D3_918D_200A4FB9E58A_INCLUDED_)
#define _TC_TYPE_F5D63276_0ED5_42D3_918D_200A4FB9E58A_INCLUDED_
namespace TcEvents
{
	namespace MyCppEventClass
	{
		CONSTEXPR const GUID EventClass = {0xf5d63276,0x0ed5,0x42d3,{0x91,0x8d,0x20,0x0a,0x4f,0xb9,0xe5,0x8a}};

		struct EventIds
		{
			enum
			{
					MyCppMessage =  1, //My Cpp Message
					MyCppAlarm =  2, //My Cpp Alarm
			};
		};

		CONSTEXPR const TcEventEntry MyCppMessage = { EventClass, EventIds::MyCppMessage, TcEventSeverity::Verbose };
		CONSTEXPR const TcEventEntry MyCppAlarm = { EventClass, EventIds::MyCppAlarm, TcEventSeverity::Error };
	};
};
#endif // !defined(_TC_TYPE_F5D63276_0ED5_42D3_918D_200A4FB9E58A_INCLUDED_)

///</AutoGeneratedContent>

///<AutoGeneratedContent id="InterfaceIDs">
///</AutoGeneratedContent>
